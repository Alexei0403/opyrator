{
  "openapi": "3.0.2",
  "info": {
    "title": "Generate Text - Opyrator",
    "description": "Generate text based on a given prompt.",
    "version": "0.1.0"
  },
  "paths": {
    "/call": {
      "post": {
        "summary": "Execute the opyrator.",
        "description": "Executes this opyrator.",
        "operationId": "call",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TextGenerationInput" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenerationOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "summary": "Get info metadata.",
        "description": "Returns informational metadata about this Opyrator.",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Info Info Get",
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "TextGenerationInput": {
        "title": "TextGenerationInput",
        "required": ["text"],
        "type": "object",
        "properties": {
          "text": {
            "title": "Text Input",
            "maxLength": 1000,
            "type": "string",
            "description": "The input text to use as basis to generate text."
          },
          "temperature": {
            "title": "Temperature",
            "multipleOf": 0.001,
            "exclusiveMinimum": 0.0,
            "type": "number",
            "description": "The value used to module the next token probabilities.",
            "default": 1.0
          },
          "max_length": {
            "title": "Max Length",
            "maximum": 100.0,
            "minimum": 5.0,
            "type": "integer",
            "description": "The maximum length of the sequence to be generated.",
            "default": 30
          },
          "repetition_penalty": {
            "title": "Repetition Penalty",
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number",
            "description": "The parameter for repetition penalty. 1.0 means no penalty.",
            "default": 1.0
          },
          "top_k": {
            "title": "Top K",
            "minimum": 0.0,
            "type": "integer",
            "description": "The number of highest probability vocabulary tokens to keep for top-k-filtering.",
            "default": 50
          },
          "do_sample": {
            "title": "Do Sample",
            "type": "boolean",
            "description": "Whether or not to use sampling ; use greedy decoding otherwise.",
            "default": false
          }
        }
      },
      "TextGenerationOutput": {
        "title": "TextGenerationOutput",
        "required": ["generated_text"],
        "type": "object",
        "properties": {
          "generated_text": { "title": "Generated Text", "type": "string" }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "type": "string" }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      }
    }
  }
}
